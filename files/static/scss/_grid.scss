// Mixins
@mixin calculate-width($size, $columns, $gutter) {
  width: calc(#{(($size / $columns ) *100)+"%"} - #{$gutter});
}

.grid {
  display: flex;
  align-items: stretch;
  flex-flow: row wrap;
  width: 100%;
  margin: 0 auto;
  @extend .clearfix;

}

.cell {
  flex: 1;
  box-sizing: border-box;
  padding: $layout-gutter;

  @for $i from 1 through 12 {
    &.cell-#{$i} {
      flex: none;
    }
  }
}

.cell-middle {
  align-self: center;
}

.grid-85 {
    width: 85%;
    max-width: 1200px;
}


// Grid for phone
@media screen and (max-width: $grid-breakpoint-md - 1){
  // Calculate the width for size specific columns
  @for $i from 1 through 12 {
    .cell-sm-#{$i} {
      @include calculate-width($i, 12, $layout-gutter)
    }
  }

  // Calculate full size for all other specifications
  @for $i from 1 through 12 {
    .cell-#{$i} {
      @include calculate-width(12, 12, $layout-gutter)
    }
  }
}

// Grid for tablet
@media screen and (min-width: $grid-breakpoint-md) and (max-width: $grid-breakpoint-lg - 1){
  @for $i from 1 through 12 {
    .cell-md-#{$i} {
      @include calculate-width($i, 12, $layout-gutter)
    }
  }

  // Calculate full size for all other specifications
  @for $i from 1 through 12 {
    .cell-#{$i} {
      @include calculate-width(12, 12, $layout-gutter)
    }
  }
}

// Grid for desktop
@media screen and (min-width: $grid-breakpoint-lg) {
  @for $i from 1 through 12 {
    .cell-#{$i} {
      @include calculate-width($i, 12, $layout-gutter)
    }
  }
}

